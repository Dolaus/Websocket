{"ast":null,"code":"var _jsxFileName = \"G:\\\\webProj\\\\front-chat\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport Auth from './Auth';\nimport './App.css'; // Додайте CSS файл для стилів\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [token, setToken] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const tokenFromUrl = queryParams.get('token');\n    if (tokenFromUrl) {\n      localStorage.setItem('token', tokenFromUrl);\n      setToken(tokenFromUrl);\n      window.history.replaceState({}, document.title, \"/\");\n    } else {\n      const savedToken = localStorage.getItem('token');\n      setToken(savedToken);\n    }\n    if (token) {\n      const socketIo = io('http://localhost:3000', {\n        query: {\n          token\n        }\n      });\n      setSocket(socketIo);\n      socketIo.on('connect', () => {\n        console.log(\"Socket connected\");\n\n        // Запит чатів після підключення\n        fetchChats(socketIo);\n      });\n      socketIo.on('message', message => {\n        console.log('New message received:', message);\n        setMessages(prevMessages => [...prevMessages, message]);\n      });\n      return () => {\n        socketIo.disconnect();\n      };\n    }\n  }, [token]);\n  const fetchChats = async socketIo => {\n    try {\n      const response = await axios.get('http://localhost:3000/chat/all-user-chats', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setChats(response.data);\n      console.log(response.data);\n      response.data.forEach(chat => {\n        socketIo.emit('joinRoom', chat.chat_name);\n      });\n    } catch (error) {\n      console.error('Error fetching chats:', error);\n    }\n  };\n  const handleSendMessageToRoom = roomName => {\n    if (socket) {\n      socket.emit('sendMessage', {\n        room: roomName,\n        message: `Hello, ${roomName}!`\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !token ? /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Chats:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: chats.map(chat => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => setSelectedChat(chat),\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: chat.chat_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this), \": \", chat.lastMessage ? chat.lastMessage.content : \"No messages\"]\n          }, chat._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 23\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-window\",\n        children: selectedChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedChat.chat_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messages\",\n            children: messages.filter(msg => msg.room === selectedChat.chat_name).map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-user\",\n                children: [msg.user, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 35\n              }, this), \" \", msg.message]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSendMessageToRoom(selectedChat.chat_name),\n            children: \"Send Message to this Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a chat to view messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"UnF2I4rk/2qBi92gojqQRM56c5M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","io","Auth","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","token","setToken","socket","setSocket","messages","setMessages","chats","setChats","selectedChat","setSelectedChat","queryParams","URLSearchParams","window","location","search","tokenFromUrl","get","localStorage","setItem","history","replaceState","document","title","savedToken","getItem","socketIo","query","on","console","log","fetchChats","message","prevMessages","disconnect","response","headers","data","forEach","chat","emit","chat_name","error","handleSendMessageToRoom","roomName","room","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","lastMessage","content","_id","filter","msg","index","user","_c","$RefreshReg$"],"sources":["G:/webProj/front-chat/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport Auth from './Auth';\nimport './App.css'; // Додайте CSS файл для стилів\n\nfunction App() {\n  const [token, setToken] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const tokenFromUrl = queryParams.get('token');\n\n    if (tokenFromUrl) {\n      localStorage.setItem('token', tokenFromUrl);\n      setToken(tokenFromUrl);\n      window.history.replaceState({}, document.title, \"/\");\n    } else {\n      const savedToken = localStorage.getItem('token');\n      setToken(savedToken);\n    }\n\n    if (token) {\n      const socketIo = io('http://localhost:3000', {\n        query: { token }\n      });\n      setSocket(socketIo);\n\n      socketIo.on('connect', () => {\n        console.log(\"Socket connected\");\n\n        // Запит чатів після підключення\n        fetchChats(socketIo);\n      });\n\n      socketIo.on('message', (message) => {\n        console.log('New message received:', message);\n        setMessages((prevMessages) => [...prevMessages, message]);\n      });\n\n      return () => {\n        socketIo.disconnect();\n      };\n    }\n  }, [token]);\n\n  const fetchChats = async (socketIo) => {\n    try {\n      const response = await axios.get('http://localhost:3000/chat/all-user-chats', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setChats(response.data);\n      console.log(response.data);\n\n      response.data.forEach(chat => {\n        socketIo.emit('joinRoom', chat.chat_name);\n      });\n    } catch (error) {\n      console.error('Error fetching chats:', error);\n    }\n  };\n\n  const handleSendMessageToRoom = (roomName) => {\n    if (socket) {\n      socket.emit('sendMessage', { room: roomName, message: `Hello, ${roomName}!` });\n    }\n  };\n\n  return (\n      <div className=\"App\">\n        {!token ? (\n            <Auth />\n        ) : (\n            <div className=\"chat-container\">\n              <div className=\"chat-list\">\n                <h2>Chats:</h2>\n                <ul>\n                  {chats.map((chat) => (\n                      <li key={chat._id} onClick={() => setSelectedChat(chat)}>\n                        <strong>{chat.chat_name}</strong>: {chat.lastMessage ? chat.lastMessage.content : \"No messages\"}\n                      </li>\n                  ))}\n                </ul>\n              </div>\n              <div className=\"chat-window\">\n                {selectedChat ? (\n                    <>\n                      <h2>{selectedChat.chat_name}</h2>\n                      <div className=\"messages\">\n                        {messages\n                            .filter(msg => msg.room === selectedChat.chat_name)\n                            .map((msg, index) => (\n                                <div key={index} className=\"message\">\n                                  <span className=\"message-user\">{msg.user}:</span> {msg.message}\n                                </div>\n                            ))}\n                      </div>\n                      <button onClick={() => handleSendMessageToRoom(selectedChat.chat_name)}>Send Message to this Room</button>\n                    </>\n                ) : (\n                    <p>Select a chat to view messages</p>\n                )}\n              </div>\n            </div>\n        )}\n      </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
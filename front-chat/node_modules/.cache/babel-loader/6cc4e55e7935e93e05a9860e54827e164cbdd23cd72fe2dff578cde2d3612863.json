{"ast":null,"code":"var _jsxFileName = \"G:\\\\webProj\\\\front-chat\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport { jwtDecode } from 'jwt-decode';\nimport Auth from './components/Auth';\nimport ChatList from './components/ChatList';\nimport MessageList from './components/MessageList';\nimport './App.css'; // Імпорт стилів\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [token, setToken] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [messageToSend, setMessageToSend] = useState('');\n  const messagesEndRef = useRef(null); // Реактивний реф для прокручування\n\n  // Декодування токена для отримання userId\n  const getUserIdFromToken = token => {\n    try {\n      const decodedToken = jwtDecode(token);\n      return decodedToken.userId; // Або інший ключ, де зберігається ID користувача\n    } catch (error) {\n      console.error('Error decoding token:', error);\n      return null;\n    }\n  };\n  const userId = token ? getUserIdFromToken(token) : null;\n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const tokenFromUrl = queryParams.get('token');\n    if (tokenFromUrl) {\n      localStorage.setItem('token', tokenFromUrl);\n      setToken(tokenFromUrl);\n      window.history.replaceState({}, document.title, \"/\");\n    } else {\n      const savedToken = localStorage.getItem('token');\n      setToken(savedToken);\n    }\n    if (token) {\n      const socketIo = io('http://localhost:3000', {\n        query: {\n          token\n        }\n      });\n      setSocket(socketIo);\n      socketIo.on('connect', () => {\n        console.log(\"Socket connected\");\n        fetchChats(socketIo);\n      });\n      socketIo.on('message', message => {\n        console.log('New message received:', message);\n        setMessages(prevMessages => [...prevMessages, message]);\n      });\n      return () => {\n        socketIo.disconnect();\n      };\n    }\n  }, [token]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    // Прокручування до останнього повідомлення\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages, selectedChat]);\n  const fetchChats = async socketIo => {\n    try {\n      const response = await axios.get('http://localhost:3000/chat/all-user-chats', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setChats(response.data);\n      console.log(response.data);\n      response.data.forEach(chat => {\n        socketIo.emit('joinRoom', chat.chat_name);\n      });\n    } catch (error) {\n      console.error('Error fetching chats:', error);\n    }\n  };\n  const handleSendMessage = () => {\n    if (socket && selectedChat && messageToSend) {\n      socket.emit('sendMessage', {\n        room: selectedChat,\n        message: messageToSend\n      });\n      setMessageToSend('');\n    }\n  };\n  const handleChatSelect = async chatId => {\n    setSelectedChat(chatId);\n    setMessages([]); // Очищення повідомлень при виборі нового чату\n\n    try {\n      const response = await axios.get(`http://localhost:3000/chat/get-chat/${chatId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setMessages(response.data.messages);\n    } catch (error) {\n      console.error('Error fetching chat messages:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: !token ? /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Chats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ChatList, {\n          chats: chats,\n          selectedChat: selectedChat,\n          onSelectChat: handleChatSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-area\",\n        children: selectedChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(MessageList, {\n            messages: messages,\n            userId: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: messageToSend,\n              onChange: e => setMessageToSend(e.target.value),\n              placeholder: \"Type your message...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSendMessage,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 23\n          }, this), \" \"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a chat to start messaging\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"4wJIdfdEbT+CbvwToRVqm2eoz78=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","io","jwtDecode","Auth","ChatList","MessageList","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","token","setToken","socket","setSocket","messages","setMessages","chats","setChats","selectedChat","setSelectedChat","messageToSend","setMessageToSend","messagesEndRef","getUserIdFromToken","decodedToken","userId","error","console","queryParams","URLSearchParams","window","location","search","tokenFromUrl","get","localStorage","setItem","history","replaceState","document","title","savedToken","getItem","socketIo","query","on","log","fetchChats","message","prevMessages","disconnect","_messagesEndRef$curre","current","scrollIntoView","behavior","response","headers","data","forEach","chat","emit","chat_name","handleSendMessage","room","handleChatSelect","chatId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectChat","type","value","onChange","e","target","placeholder","onClick","ref","_c","$RefreshReg$"],"sources":["G:/webProj/front-chat/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport { jwtDecode } from 'jwt-decode';import Auth from './components/Auth';\nimport ChatList from './components/ChatList';\nimport MessageList from './components/MessageList';\nimport './App.css'; // Імпорт стилів\n\nfunction App() {\n  const [token, setToken] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [messageToSend, setMessageToSend] = useState('');\n  const messagesEndRef = useRef(null); // Реактивний реф для прокручування\n\n  // Декодування токена для отримання userId\n  const getUserIdFromToken = (token) => {\n    try {\n      const decodedToken = jwtDecode(token);\n      return decodedToken.userId; // Або інший ключ, де зберігається ID користувача\n    } catch (error) {\n      console.error('Error decoding token:', error);\n      return null;\n    }\n  };\n\n  const userId = token ? getUserIdFromToken(token) : null;\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const tokenFromUrl = queryParams.get('token');\n\n    if (tokenFromUrl) {\n      localStorage.setItem('token', tokenFromUrl);\n      setToken(tokenFromUrl);\n      window.history.replaceState({}, document.title, \"/\");\n    } else {\n      const savedToken = localStorage.getItem('token');\n      setToken(savedToken);\n    }\n\n    if (token) {\n      const socketIo = io('http://localhost:3000', {\n        query: { token }\n      });\n      setSocket(socketIo);\n\n      socketIo.on('connect', () => {\n        console.log(\"Socket connected\");\n        fetchChats(socketIo);\n      });\n\n      socketIo.on('message', (message) => {\n        console.log('New message received:', message);\n        setMessages((prevMessages) => [...prevMessages, message]);\n      });\n\n      return () => {\n        socketIo.disconnect();\n      };\n    }\n  }, [token]);\n\n  useEffect(() => {\n    // Прокручування до останнього повідомлення\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages, selectedChat]);\n\n  const fetchChats = async (socketIo) => {\n    try {\n      const response = await axios.get('http://localhost:3000/chat/all-user-chats', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setChats(response.data);\n      console.log(response.data);\n\n      response.data.forEach(chat => {\n        socketIo.emit('joinRoom', chat.chat_name);\n      });\n    } catch (error) {\n      console.error('Error fetching chats:', error);\n    }\n  };\n\n  const handleSendMessage = () => {\n    if (socket && selectedChat && messageToSend) {\n      socket.emit('sendMessage', { room: selectedChat, message: messageToSend });\n      setMessageToSend('');\n    }\n  };\n\n  const handleChatSelect = async (chatId) => {\n    setSelectedChat(chatId);\n    setMessages([]); // Очищення повідомлень при виборі нового чату\n\n    try {\n      const response = await axios.get(`http://localhost:3000/chat/get-chat/${chatId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setMessages(response.data.messages);\n    } catch (error) {\n      console.error('Error fetching chat messages:', error);\n    }\n  };\n\n  return (\n      <div className=\"app-container\">\n        {!token ? (\n            <Auth />\n        ) : (\n            <div className=\"chat-app\">\n              <div className=\"chat-list\">\n                <h1>Chats</h1>\n                <ChatList chats={chats} selectedChat={selectedChat} onSelectChat={handleChatSelect} />\n              </div>\n              <div className=\"message-area\">\n                {selectedChat ? (\n                    <>\n                      <MessageList messages={messages} userId={userId} />\n                      <div className=\"message-input\">\n                        <input\n                            type=\"text\"\n                            value={messageToSend}\n                            onChange={(e) => setMessageToSend(e.target.value)}\n                            placeholder=\"Type your message...\"\n                        />\n                        <button onClick={handleSendMessage}>Send</button>\n                      </div>\n                      <div ref={messagesEndRef} /> {/* Для прокручування */}\n                    </>\n                ) : (\n                    <p>Select a chat to start messaging</p>\n                )}\n              </div>\n            </div>\n        )}\n      </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
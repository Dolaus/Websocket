{"ast":null,"code":"var _jsxFileName = \"G:\\\\webProj\\\\front-chat\\\\src\\\\components\\\\Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Auth({\n  setToken\n}) {\n  _s();\n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const tokenFromUrl = queryParams.get('token');\n    if (tokenFromUrl) {\n      localStorage.setItem('token', tokenFromUrl);\n      setToken(tokenFromUrl);\n      window.history.replaceState({}, document.title, \"/\");\n    } else {\n      const savedToken = localStorage.getItem('token');\n      setToken(savedToken);\n    }\n  }, [setToken]);\n  const handleLogin = () => {\n    // Логіка авторизації через Google\n    // Наприклад, перенаправлення на сторінку авторизації Google\n\n    // Імітація отримання токена з Google\n    // Тут вам потрібно буде замінити це на реальний процес отримання токена\n    const token = 'your-token-from-google'; // Заміни на реальний токен\n    if (token) {\n      localStorage.setItem('token', token);\n      setToken(token);\n      window.location.href = `/?token=${token}`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(Auth, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Auth","setToken","_s","queryParams","URLSearchParams","window","location","search","tokenFromUrl","get","localStorage","setItem","history","replaceState","document","title","savedToken","getItem","handleLogin","token","href","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["G:/webProj/front-chat/src/components/Auth.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nfunction Auth({ setToken }) {\r\n    useEffect(() => {\r\n        const queryParams = new URLSearchParams(window.location.search);\r\n        const tokenFromUrl = queryParams.get('token');\r\n\r\n        if (tokenFromUrl) {\r\n            localStorage.setItem('token', tokenFromUrl);\r\n            setToken(tokenFromUrl);\r\n            window.history.replaceState({}, document.title, \"/\");\r\n        } else {\r\n            const savedToken = localStorage.getItem('token');\r\n            setToken(savedToken);\r\n        }\r\n    }, [setToken]);\r\n\r\n    const handleLogin = () => {\r\n        // Логіка авторизації через Google\r\n        // Наприклад, перенаправлення на сторінку авторизації Google\r\n\r\n        // Імітація отримання токена з Google\r\n        // Тут вам потрібно буде замінити це на реальний процес отримання токена\r\n        const token = 'your-token-from-google'; // Заміни на реальний токен\r\n        if (token) {\r\n            localStorage.setItem('token', token);\r\n            setToken(token);\r\n            window.location.href = `/?token=${token}`;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"auth-container\">\r\n            <button onClick={handleLogin}>Login with Google</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Auth;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,IAAIA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACxBL,SAAS,CAAC,MAAM;IACZ,MAAMM,WAAW,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC/D,MAAMC,YAAY,GAAGL,WAAW,CAACM,GAAG,CAAC,OAAO,CAAC;IAE7C,IAAID,YAAY,EAAE;MACdE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,YAAY,CAAC;MAC3CP,QAAQ,CAACO,YAAY,CAAC;MACtBH,MAAM,CAACO,OAAO,CAACC,YAAY,CAAC,CAAC,CAAC,EAAEC,QAAQ,CAACC,KAAK,EAAE,GAAG,CAAC;IACxD,CAAC,MAAM;MACH,MAAMC,UAAU,GAAGN,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC;MAChDhB,QAAQ,CAACe,UAAU,CAAC;IACxB;EACJ,CAAC,EAAE,CAACf,QAAQ,CAAC,CAAC;EAEd,MAAMiB,WAAW,GAAGA,CAAA,KAAM;IACtB;IACA;;IAEA;IACA;IACA,MAAMC,KAAK,GAAG,wBAAwB,CAAC,CAAC;IACxC,IAAIA,KAAK,EAAE;MACPT,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEQ,KAAK,CAAC;MACpClB,QAAQ,CAACkB,KAAK,CAAC;MACfd,MAAM,CAACC,QAAQ,CAACc,IAAI,GAAG,WAAWD,KAAK,EAAE;IAC7C;EACJ,CAAC;EAED,oBACIpB,OAAA;IAAKsB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC3BvB,OAAA;MAAQwB,OAAO,EAAEL,WAAY;MAAAI,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEd;AAACzB,EAAA,CAlCQF,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AAoCb,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"G:\\\\webProj\\\\front-chat\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport { jwtDecode } from 'jwt-decode';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Auth from './components/Auth';\nimport ChatList from './components/ChatList';\nimport MessageList from './components/MessageList';\nimport './App.css';\nimport InputField from \"./components/InputField\";\nimport UniversalChatModal from \"./components/UniversalChatModal\"; // Імпорт стилів\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons';\nimport SearchBar from \"./components/search-bar/SearchBar\";\nimport UniversalButton from \"./components/universal-button/UniversalButton\";\nimport UserIcon from \"./components/user-icon/UserIcon\";\nimport ChatDetails from \"./components/chat-details/ChatDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [token, setToken] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const selectedChatRef = useRef(null);\n  const [messageToSend, setMessageToSend] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [initialFirstName, setInitialFirstName] = useState('');\n  const [initialLastName, setInitialLastName] = useState('');\n  useEffect(() => {\n    selectedChatRef.current = selectedChat;\n  }, [selectedChat]);\n  const updateLastMessage = message => {\n    setChats(prevChats => prevChats.map(chat => {\n      console.log(message);\n      if (chat.chat_name === message.room) {\n        return {\n          ...chat,\n          lastMessage: message\n        };\n      }\n      return chat;\n    }));\n  };\n  const handleEditChat = async chat => {\n    setInitialFirstName(chat.first_name);\n    setInitialLastName(chat.last_name);\n    setIsEditing(true);\n    setFirstName(chat.first_name);\n    setLastName(chat.last_name);\n    setSelectedChat(chat.chat_name);\n    setShowModal(true);\n  };\n  const handleDeleteChat = async chatId => {\n    try {\n      await axios.delete(`http://localhost:3000/chat/delete-chat/${chatId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setChats(prevChats => prevChats.filter(chat => chat.chat_name !== chatId));\n      if (selectedChat === chatId) {\n        setSelectedChat(null);\n        setMessages([]);\n      }\n    } catch (error) {\n      console.error('Error deleting chat:', error);\n    }\n  };\n\n  // Декодування токена для отримання userId\n  const getUserIdFromToken = token => {\n    try {\n      const decodedToken = jwtDecode(token);\n      return decodedToken.userId; // Або інший ключ, де зберігається ID користувача\n    } catch (error) {\n      console.error('Error decoding token:', error);\n      return null;\n    }\n  };\n  const userId = token ? getUserIdFromToken(token) : null;\n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const tokenFromUrl = queryParams.get('token');\n    if (tokenFromUrl) {\n      localStorage.setItem('token', tokenFromUrl);\n      setToken(tokenFromUrl);\n      window.history.replaceState({}, document.title, \"/\");\n    } else {\n      const savedToken = localStorage.getItem('token');\n      setToken(savedToken);\n    }\n    if (token) {\n      const socketIo = io('http://localhost:3000', {\n        query: {\n          token\n        }\n      });\n      setSocket(socketIo);\n      socketIo.on('connect', () => {\n        console.log(\"Socket connected\");\n        fetchChats(socketIo);\n      });\n      socketIo.on('message', message => {\n        console.log('New message received:', message);\n        console.log(selectedChatRef.current === message.room);\n        console.log(\"room\" + message.room);\n        console.log(selectedChatRef.current);\n        console.log(\"MessUserId\" + message.user);\n        console.log(userId);\n        if (selectedChatRef.current === message.room) {\n          setMessages(prevMessages => [...prevMessages, message]);\n        }\n        if (message.user !== userId) {\n          toast.info(`New message from ${message.chatName}`);\n        }\n        console.log(message);\n        updateLastMessage(message);\n      });\n      return () => {\n        socketIo.disconnect();\n      };\n    }\n  }, [token]);\n  const handleUpdateChat = async () => {\n    if (!firstName || !lastName) {\n      alert('Both fields are required');\n      return;\n    }\n    try {\n      await axios.put(`http://localhost:3000/chat/update-chat/${selectedChat}`, {\n        first_name: firstName,\n        last_name: lastName\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setChats(prevChats => prevChats.map(chat => chat.chat_name === selectedChat ? {\n        ...chat,\n        first_name: firstName,\n        last_name: lastName\n      } : chat));\n      setSelectedChat(selectedChat);\n      setShowModal(false);\n    } catch (error) {\n      console.error('Error updating chat:', error);\n    }\n  };\n  const fetchChats = async socketIo => {\n    try {\n      const response = await axios.get('http://localhost:3000/chat/all-user-chats', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setChats(response.data);\n      console.log(response.data);\n      response.data.forEach(chat => {\n        socketIo.emit('joinRoom', chat.chat_name);\n      });\n    } catch (error) {\n      console.error('Error fetching chats:', error);\n    }\n  };\n  const handleSendMessage = () => {\n    if (socket && selectedChat && messageToSend) {\n      console.log(\"Вибраний чат при сенд месседж\" + selectedChat);\n      socket.emit('sendMessage', {\n        room: selectedChat,\n        message: messageToSend\n      });\n      setMessageToSend('');\n    }\n  };\n  const handleChatSelect = async chatId => {\n    setSelectedChat(chatId);\n    selectedChatRef.current = chatId; // Переконайтесь, що ви оновлюєте реф також\n    console.log(\"Вибраний чат\" + selectedChatRef.current);\n    console.log(firstName);\n    setMessages([]); // Очищення повідомлень при виборі нового чату\n\n    try {\n      const response = await axios.get(`http://localhost:3000/chat/get-chat/${chatId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setFirstName(response.data.first_name);\n      setLastName(response.data.last_name);\n      setMessages(response.data.messages);\n    } catch (error) {\n      console.error('Error fetching chat messages:', error);\n    }\n  };\n  const filteredChats = chats.filter(chat => `${chat.first_name} ${chat.last_name}`.toLowerCase().includes(searchTerm.toLowerCase()));\n  const handleCreateChat = async () => {\n    if (!firstName || !lastName) {\n      alert('Both fields are required');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:3000/chat/create-chat', {\n        firstName,\n        lastName\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const newChatName = response.data;\n      console.log('newChatName');\n      console.log(newChatName);\n      setChats(prevChats => [...prevChats, newChatName]);\n      socket.emit('joinRoom', newChatName.chat_name);\n      setSelectedChat(newChatName);\n      setShowModal(false);\n    } catch (error) {\n      console.error('Error creating chat:', error);\n    }\n  };\n  const openCreateChatModal = () => {\n    setFirstName('');\n    setLastName('');\n    setIsEditing(false);\n    setShowModal(true);\n  };\n  const openEditChatModal = chat => {\n    setInitialFirstName(chat.first_name);\n    setInitialLastName(chat.last_name);\n    setIsEditing(true);\n    setShowModal(true);\n  };\n  const handleSubmit = isEditing ? handleUpdateChat : handleCreateChat;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }, this), !token ? /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-chat-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'header-login',\n            children: [/*#__PURE__*/_jsxDEV(UserIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n            searchTerm: searchTerm,\n            setSearchTerm: setSearchTerm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 29\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(UniversalButton, {\n              onClick: openCreateChatModal,\n              label: \"Create Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ChatList, {\n          chats: filteredChats,\n          selectedChat: selectedChat,\n          onSelectChat: handleChatSelect,\n          onEditChat: handleEditChat,\n          onDeleteChat: handleDeleteChat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-area\",\n        children: [/*#__PURE__*/_jsxDEV(ChatDetails, {\n          selectedChat: selectedChat,\n          firstName: firstName,\n          lastName: lastName,\n          messages: messages,\n          userId: userId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: messageToSend,\n            onChange: e => setMessageToSend(e.target.value),\n            placeholder: \"Type your message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            className: \"send-button\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPaperPlane\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 21\n      }, this), showModal && /*#__PURE__*/_jsxDEV(UniversalChatModal, {\n        isEditing: isEditing,\n        initialFirstName: initialFirstName,\n        initialLastName: initialLastName,\n        firstName: firstName,\n        lastName: lastName,\n        setFirstName: setFirstName,\n        setLastName: setLastName,\n        handleSubmit: handleSubmit,\n        closeModal: () => setShowModal(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"J/NtZeibUzobg+DORfXWcjFjJjU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","io","jwtDecode","ToastContainer","toast","Auth","ChatList","MessageList","InputField","UniversalChatModal","FontAwesomeIcon","faPaperPlane","SearchBar","UniversalButton","UserIcon","ChatDetails","jsxDEV","_jsxDEV","App","_s","token","setToken","socket","setSocket","messages","setMessages","chats","setChats","selectedChat","setSelectedChat","selectedChatRef","messageToSend","setMessageToSend","showModal","setShowModal","firstName","setFirstName","lastName","setLastName","searchTerm","setSearchTerm","isEditing","setIsEditing","initialFirstName","setInitialFirstName","initialLastName","setInitialLastName","current","updateLastMessage","message","prevChats","map","chat","console","log","chat_name","room","lastMessage","handleEditChat","first_name","last_name","handleDeleteChat","chatId","delete","headers","filter","error","getUserIdFromToken","decodedToken","userId","queryParams","URLSearchParams","window","location","search","tokenFromUrl","get","localStorage","setItem","history","replaceState","document","title","savedToken","getItem","socketIo","query","on","fetchChats","user","prevMessages","info","chatName","disconnect","handleUpdateChat","alert","put","response","data","forEach","emit","handleSendMessage","handleChatSelect","filteredChats","toLowerCase","includes","handleCreateChat","post","newChatName","openCreateChatModal","openEditChatModal","handleSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","label","onSelectChat","onEditChat","onDeleteChat","type","value","onChange","e","target","placeholder","icon","closeModal","_c","$RefreshReg$"],"sources":["G:/webProj/front-chat/src/App.js"],"sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport {jwtDecode} from 'jwt-decode';\nimport {ToastContainer, toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Auth from './components/Auth';\nimport ChatList from './components/ChatList';\nimport MessageList from './components/MessageList';\nimport './App.css';\nimport InputField from \"./components/InputField\";\nimport UniversalChatModal from \"./components/UniversalChatModal\"; // Імпорт стилів\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faPaperPlane} from '@fortawesome/free-solid-svg-icons';\nimport SearchBar from \"./components/search-bar/SearchBar\";\nimport UniversalButton from \"./components/universal-button/UniversalButton\";\nimport UserIcon from \"./components/user-icon/UserIcon\";\nimport ChatDetails from \"./components/chat-details/ChatDetails\";\n\nfunction App() {\n    const [token, setToken] = useState(null);\n    const [socket, setSocket] = useState(null);\n    const [messages, setMessages] = useState([]);\n    const [chats, setChats] = useState([]);\n    const [selectedChat, setSelectedChat] = useState(null);\n    const selectedChatRef = useRef(null);\n    const [messageToSend, setMessageToSend] = useState('');\n    const [showModal, setShowModal] = useState(false);\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [searchTerm, setSearchTerm] = useState('');\n    const [isEditing, setIsEditing] = useState(false);\n    const [initialFirstName, setInitialFirstName] = useState('');\n    const [initialLastName, setInitialLastName] = useState('');\n\n    useEffect(() => {\n        selectedChatRef.current = selectedChat;\n    }, [selectedChat]);\n    const updateLastMessage = (message) => {\n        setChats(prevChats => prevChats.map(chat => {\n            console.log(message);\n            if (chat.chat_name === message.room) {\n                return {\n                    ...chat,\n                    lastMessage: message\n                };\n            }\n            return chat;\n        }));\n    };\n    const handleEditChat = async (chat) => {\n        setInitialFirstName(chat.first_name);\n        setInitialLastName(chat.last_name);\n        setIsEditing(true);\n        setFirstName(chat.first_name);\n        setLastName(chat.last_name);\n        setSelectedChat(chat.chat_name);\n        setShowModal(true);\n    };\n    const handleDeleteChat = async (chatId) => {\n        try {\n            await axios.delete(`http://localhost:3000/chat/delete-chat/${chatId}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n            setChats((prevChats) => prevChats.filter(chat => chat.chat_name !== chatId));\n            if (selectedChat === chatId) {\n                setSelectedChat(null);\n                setMessages([]);\n            }\n        } catch (error) {\n            console.error('Error deleting chat:', error);\n        }\n    };\n\n    // Декодування токена для отримання userId\n    const getUserIdFromToken = (token) => {\n        try {\n            const decodedToken = jwtDecode(token);\n            return decodedToken.userId; // Або інший ключ, де зберігається ID користувача\n        } catch (error) {\n            console.error('Error decoding token:', error);\n            return null;\n        }\n    };\n\n    const userId = token ? getUserIdFromToken(token) : null;\n\n    useEffect(() => {\n        const queryParams = new URLSearchParams(window.location.search);\n        const tokenFromUrl = queryParams.get('token');\n\n        if (tokenFromUrl) {\n            localStorage.setItem('token', tokenFromUrl);\n            setToken(tokenFromUrl);\n            window.history.replaceState({}, document.title, \"/\");\n        } else {\n            const savedToken = localStorage.getItem('token');\n            setToken(savedToken);\n        }\n\n        if (token) {\n            const socketIo = io('http://localhost:3000', {\n                query: {token}\n            });\n            setSocket(socketIo);\n\n            socketIo.on('connect', () => {\n                console.log(\"Socket connected\");\n                fetchChats(socketIo);\n            });\n\n            socketIo.on('message', (message) => {\n                console.log('New message received:', message);\n                console.log(selectedChatRef.current === message.room)\n                console.log(\"room\" + message.room)\n                console.log(selectedChatRef.current)\n                console.log(\"MessUserId\" + message.user);\n                console.log(userId);\n\n                if (selectedChatRef.current === message.room) {\n                    setMessages((prevMessages) => [...prevMessages, message]);\n                }\n\n                if (message.user !== userId) {\n                    toast.info(`New message from ${message.chatName}`);\n                }\n                console.log(message)\n                updateLastMessage(message);\n            });\n\n            return () => {\n                socketIo.disconnect();\n            };\n        }\n    }, [token]);\n\n\n    const handleUpdateChat = async () => {\n        if (!firstName || !lastName) {\n            alert('Both fields are required');\n            return;\n        }\n\n        try {\n            await axios.put(`http://localhost:3000/chat/update-chat/${selectedChat}`, {\n                first_name: firstName,\n                last_name: lastName\n            }, {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n\n            setChats((prevChats) => prevChats.map(chat =>\n                chat.chat_name === selectedChat\n                    ? {...chat, first_name: firstName, last_name: lastName}\n                    : chat\n            ));\n\n            setSelectedChat(selectedChat);\n            setShowModal(false);\n        } catch (error) {\n            console.error('Error updating chat:', error);\n        }\n    };\n\n    const fetchChats = async (socketIo) => {\n        try {\n            const response = await axios.get('http://localhost:3000/chat/all-user-chats', {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n            setChats(response.data);\n            console.log(response.data);\n\n            response.data.forEach(chat => {\n                socketIo.emit('joinRoom', chat.chat_name);\n            });\n        } catch (error) {\n            console.error('Error fetching chats:', error);\n        }\n    };\n\n    const handleSendMessage = () => {\n        if (socket && selectedChat && messageToSend) {\n            console.log(\"Вибраний чат при сенд месседж\" + selectedChat);\n            socket.emit('sendMessage', {room: selectedChat, message: messageToSend});\n            setMessageToSend('');\n        }\n    };\n\n    const handleChatSelect = async (chatId) => {\n        setSelectedChat(chatId);\n\n\n        selectedChatRef.current = chatId; // Переконайтесь, що ви оновлюєте реф також\n        console.log(\"Вибраний чат\" + selectedChatRef.current)\n        console.log(firstName)\n        setMessages([]); // Очищення повідомлень при виборі нового чату\n\n        try {\n            const response = await axios.get(`http://localhost:3000/chat/get-chat/${chatId}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n            setFirstName(response.data.first_name)\n            setLastName(response.data.last_name)\n            setMessages(response.data.messages);\n        } catch (error) {\n            console.error('Error fetching chat messages:', error);\n        }\n    };\n\n\n    const filteredChats = chats.filter(chat =>\n        `${chat.first_name} ${chat.last_name}`.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    const handleCreateChat = async () => {\n        if (!firstName || !lastName) {\n            alert('Both fields are required');\n            return;\n        }\n\n        try {\n            const response = await axios.post('http://localhost:3000/chat/create-chat', {\n                firstName,\n                lastName\n            }, {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n\n            const newChatName = response.data;\n            console.log('newChatName')\n            console.log(newChatName)\n            setChats((prevChats) => [...prevChats, newChatName]);\n            socket.emit('joinRoom', newChatName.chat_name);\n            setSelectedChat(newChatName);\n            setShowModal(false);\n        } catch (error) {\n            console.error('Error creating chat:', error);\n        }\n    };\n\n\n    const openCreateChatModal = () => {\n        setFirstName('');\n        setLastName('');\n        setIsEditing(false);\n        setShowModal(true);\n    };\n\n    const openEditChatModal = (chat) => {\n        setInitialFirstName(chat.first_name);\n        setInitialLastName(chat.last_name);\n        setIsEditing(true);\n        setShowModal(true);\n    };\n\n    const handleSubmit = isEditing ? handleUpdateChat : handleCreateChat;\n\n\n    return (\n        <div className=\"app-container\">\n            <ToastContainer/>\n            {!token ? (\n                <Auth/>\n            ) : (\n                <div className=\"chat-app\">\n                    <div className=\"chat-list\">\n                        <div className={\"header-chat-list\"}>\n                            <div className={'header-login'}>\n                                <UserIcon/>\n                                <Auth/>\n                            </div>\n                            <SearchBar searchTerm={searchTerm}\n                                       setSearchTerm={setSearchTerm}/> {/* Використання SearchBar */}\n                            <div>\n                            <UniversalButton onClick={openCreateChatModal} label=\"Create Chat\"/>\n                            </div>\n                        </div>\n                        <ChatList\n                            chats={filteredChats}\n                            selectedChat={selectedChat}\n                            onSelectChat={handleChatSelect}\n                            onEditChat={handleEditChat}\n                            onDeleteChat={handleDeleteChat}\n                        />\n                    </div>\n                    <div className=\"message-area\">\n                        <ChatDetails\n                            selectedChat={selectedChat}\n                            firstName={firstName}\n                            lastName={lastName}\n                            messages={messages}\n                            userId={userId}\n                        />\n                        <div className=\"message-input\">\n                            <input\n                                type=\"text\"\n                                value={messageToSend}\n                                onChange={(e) => setMessageToSend(e.target.value)}\n                                placeholder=\"Type your message...\"\n                            />\n                            <button onClick={handleSendMessage} className=\"send-button\">\n                                <FontAwesomeIcon icon={faPaperPlane}/>\n                            </button>\n                        </div>\n\n\n                    </div>\n                    {showModal && (\n                        <UniversalChatModal\n                            isEditing={isEditing}\n                            initialFirstName={initialFirstName}\n                            initialLastName={initialLastName}\n                            firstName={firstName}\n                            lastName={lastName}\n                            setFirstName={setFirstName}\n                            setLastName={setLastName}\n                            handleSubmit={handleSubmit}\n                            closeModal={() => setShowModal(false)}\n                        />\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"G:\\\\webProj\\\\front-chat\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Auth from './components/auth/Auth';\nimport ChatList from './components/chat-list/ChatList';\nimport MessageList from './components/message-list/MessageList';\nimport './App.css';\nimport UniversalChatModal from \"./components/modal/UniversalChatModal\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons';\nimport SearchBar from \"./components/search-bar/SearchBar\";\nimport UniversalButton from \"./components/universal-button/UniversalButton\";\nimport UserIcon from \"./components/user-icon/UserIcon\";\nimport ChatDetails from \"./components/chat-details/ChatDetails\";\nimport * as handlers from './handlers/handlers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [token, setToken] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const selectedChatRef = useRef(null);\n  const [messageToSend, setMessageToSend] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [ChatUName, setChatUName] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [initialFirstName, setInitialFirstName] = useState('');\n  const [initialLastName, setInitialLastName] = useState('');\n  const [isSendingMessages, setIsSendingMessages] = useState(false);\n  const [intervalId, setIntervalId] = useState(null);\n  useEffect(() => {\n    selectedChatRef.current = selectedChat;\n  }, [selectedChat]);\n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const tokenFromUrl = queryParams.get('token');\n    if (tokenFromUrl) {\n      localStorage.setItem('token', tokenFromUrl);\n      setToken(tokenFromUrl);\n      window.history.replaceState({}, document.title, \"/\");\n    } else {\n      const savedToken = localStorage.getItem('token');\n      setToken(savedToken);\n    }\n    if (token) {\n      const socketIo = io('http://localhost:3000', {\n        query: {\n          token\n        }\n      });\n      setSocket(socketIo);\n      socketIo.on('connect', () => {\n        console.log(\"Socket connected\");\n        handlers.fetchChats(socketIo, token, setChats, setChatUName, setMessages);\n      });\n      socketIo.on('message', message => {\n        console.log('New message received:', message);\n        if (selectedChatRef.current === message.room) {\n          setMessages(prevMessages => [...prevMessages, message]);\n        }\n        if (message.user !== handlers.getUserIdFromToken(token)) {\n          toast.info(`New message from ${message.chatName}`);\n        }\n        handlers.updateLastMessage(message, setChats);\n      });\n      return () => {\n        socketIo.disconnect();\n      };\n    }\n  }, [token]);\n  const sendRandomMessage = () => {\n    if (chats.length === 0) return;\n\n    // Обрати випадковий чат з наявних\n    const randomChat = chats[Math.floor(Math.random() * chats.length)];\n    console.log(randomChat);\n    // Надіслати повідомлення\n    handlers.handleSendMessage(socket, randomChat.chat_name, \"Random message\", () => {});\n  };\n  const handleToggleSendingMessages = () => {\n    if (isSendingMessages) {\n      // Зупинити надсилання повідомлень\n      clearInterval(intervalId);\n      setIsSendingMessages(false);\n    } else {\n      // Розпочати надсилання повідомлень\n      const id = setInterval(sendRandomMessage, 5000);\n      setIntervalId(id);\n      setIsSendingMessages(true);\n    }\n  };\n  const handleSubmit = isEditing ? () => handlers.handleUpdateChat(firstName, lastName, selectedChat, token, setChats, setSelectedChat, setShowModal) : () => handlers.handleCreateChat(firstName, lastName, token, setChats, setSelectedChat, socket, setShowModal);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-chat-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'header-login',\n            children: [/*#__PURE__*/_jsxDEV(UserIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n            searchTerm: searchTerm,\n            setSearchTerm: setSearchTerm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), token ? /*#__PURE__*/_jsxDEV(UniversalButton, {\n            onClick: () => handlers.openCreateChatModal(setFirstName, setLastName, setIsEditing, setShowModal),\n            label: \"Create Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 34\n          }, this) : null, token ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleToggleSendingMessages,\n            className: \"send-random-button\",\n            children: isSendingMessages ? \"Stop Sending\" : \"Start Sending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ChatList, {\n          chats: chats.filter(chat => `${chat.first_name} ${chat.last_name}`.toLowerCase().includes(searchTerm.toLowerCase())),\n          selectedChat: selectedChat,\n          onSelectChat: chatId => handlers.handleChatSelect(chatId, token, setSelectedChat, setMessages, setChatUName),\n          onEditChat: chat => handlers.handleEditChat(chat, setFirstName, setLastName, setSelectedChat, setShowModal, setIsEditing, setInitialFirstName, setInitialLastName),\n          onDeleteChat: chatId => handlers.handleDeleteChat(chatId, token, setChats, setSelectedChat, setMessages)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-area\",\n        children: [/*#__PURE__*/_jsxDEV(ChatDetails, {\n          selectedChat: selectedChat,\n          chatName: ChatUName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-list\",\n          children: /*#__PURE__*/_jsxDEV(MessageList, {\n            messages: messages,\n            userId: handlers.getUserIdFromToken(token)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: 'message-focus',\n            type: \"text\",\n            value: messageToSend,\n            onChange: e => setMessageToSend(e.target.value),\n            placeholder: \"Type your message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlers.handleSendMessage(socket, selectedChat, messageToSend, setMessageToSend),\n            className: \"send-button\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              style: {\n                opacity: 0.5\n              },\n              icon: faPaperPlane\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), showModal && /*#__PURE__*/_jsxDEV(UniversalChatModal, {\n        isEditing: isEditing,\n        initialFirstName: initialFirstName,\n        initialLastName: initialLastName,\n        firstName: firstName,\n        lastName: lastName,\n        setFirstName: setFirstName,\n        setLastName: setLastName,\n        handleSubmit: handleSubmit,\n        closeModal: () => setShowModal(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"MsMMksX8DPP/htwXMUy1PMuxai8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","ToastContainer","toast","Auth","ChatList","MessageList","UniversalChatModal","FontAwesomeIcon","faPaperPlane","SearchBar","UniversalButton","UserIcon","ChatDetails","handlers","jsxDEV","_jsxDEV","App","_s","token","setToken","socket","setSocket","messages","setMessages","chats","setChats","selectedChat","setSelectedChat","selectedChatRef","messageToSend","setMessageToSend","showModal","setShowModal","firstName","setFirstName","lastName","setLastName","ChatUName","setChatUName","searchTerm","setSearchTerm","isEditing","setIsEditing","initialFirstName","setInitialFirstName","initialLastName","setInitialLastName","isSendingMessages","setIsSendingMessages","intervalId","setIntervalId","current","queryParams","URLSearchParams","window","location","search","tokenFromUrl","get","localStorage","setItem","history","replaceState","document","title","savedToken","getItem","socketIo","query","on","console","log","fetchChats","message","room","prevMessages","user","getUserIdFromToken","info","chatName","updateLastMessage","disconnect","sendRandomMessage","length","randomChat","Math","floor","random","handleSendMessage","chat_name","handleToggleSendingMessages","clearInterval","id","setInterval","handleSubmit","handleUpdateChat","handleCreateChat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","openCreateChatModal","label","filter","chat","first_name","last_name","toLowerCase","includes","onSelectChat","chatId","handleChatSelect","onEditChat","handleEditChat","onDeleteChat","handleDeleteChat","userId","type","value","onChange","e","target","placeholder","style","opacity","icon","closeModal","_c","$RefreshReg$"],"sources":["G:/webProj/front-chat/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Auth from './components/auth/Auth';\nimport ChatList from './components/chat-list/ChatList';\nimport MessageList from './components/message-list/MessageList';\nimport './App.css';\nimport UniversalChatModal from \"./components/modal/UniversalChatModal\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons';\nimport SearchBar from \"./components/search-bar/SearchBar\";\nimport UniversalButton from \"./components/universal-button/UniversalButton\";\nimport UserIcon from \"./components/user-icon/UserIcon\";\nimport ChatDetails from \"./components/chat-details/ChatDetails\";\nimport * as handlers from './handlers/handlers';\n\nfunction App() {\n    const [token, setToken] = useState(null);\n    const [socket, setSocket] = useState(null);\n    const [messages, setMessages] = useState([]);\n    const [chats, setChats] = useState([]);\n    const [selectedChat, setSelectedChat] = useState(null);\n    const selectedChatRef = useRef(null);\n    const [messageToSend, setMessageToSend] = useState('');\n    const [showModal, setShowModal] = useState(false);\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [ChatUName, setChatUName] = useState('');\n    const [searchTerm, setSearchTerm] = useState('');\n    const [isEditing, setIsEditing] = useState(false);\n    const [initialFirstName, setInitialFirstName] = useState('');\n    const [initialLastName, setInitialLastName] = useState('');\n    const [isSendingMessages, setIsSendingMessages] = useState(false);\n    const [intervalId, setIntervalId] = useState(null);\n\n    useEffect(() => {\n        selectedChatRef.current = selectedChat;\n    }, [selectedChat]);\n\n    useEffect(() => {\n        const queryParams = new URLSearchParams(window.location.search);\n        const tokenFromUrl = queryParams.get('token');\n\n        if (tokenFromUrl) {\n            localStorage.setItem('token', tokenFromUrl);\n            setToken(tokenFromUrl);\n            window.history.replaceState({}, document.title, \"/\");\n        } else {\n            const savedToken = localStorage.getItem('token');\n            setToken(savedToken);\n        }\n\n        if (token) {\n            const socketIo = io('http://localhost:3000', { query: { token } });\n            setSocket(socketIo);\n\n            socketIo.on('connect', () => {\n                console.log(\"Socket connected\");\n                handlers.fetchChats(socketIo, token, setChats, setChatUName, setMessages);\n            });\n\n            socketIo.on('message', (message) => {\n                console.log('New message received:', message);\n\n                if (selectedChatRef.current === message.room) {\n                    setMessages((prevMessages) => [...prevMessages, message]);\n                }\n\n                if (message.user !== handlers.getUserIdFromToken(token)) {\n                    toast.info(`New message from ${message.chatName}`);\n                }\n                handlers.updateLastMessage(message, setChats);\n            });\n\n            return () => {\n                socketIo.disconnect();\n            };\n        }\n    }, [token]);\n\n    const sendRandomMessage = () => {\n        if (chats.length === 0) return;\n\n        // Обрати випадковий чат з наявних\n        const randomChat = chats[Math.floor(Math.random() * chats.length)];\n        console.log(randomChat);\n        // Надіслати повідомлення\n        handlers.handleSendMessage(socket, randomChat.chat_name, \"Random message\", () => {});\n    };\n\n    const handleToggleSendingMessages = () => {\n        if (isSendingMessages) {\n            // Зупинити надсилання повідомлень\n            clearInterval(intervalId);\n            setIsSendingMessages(false);\n        } else {\n            // Розпочати надсилання повідомлень\n            const id = setInterval(sendRandomMessage, 5000);\n            setIntervalId(id);\n            setIsSendingMessages(true);\n        }\n    };\n\n    const handleSubmit = isEditing ? () => handlers.handleUpdateChat(firstName, lastName, selectedChat, token, setChats, setSelectedChat, setShowModal) : () => handlers.handleCreateChat(firstName, lastName, token, setChats, setSelectedChat, socket, setShowModal);\n\n    return (\n        <div className=\"app-container\">\n            <ToastContainer />\n            <div className=\"chat-app\">\n                <div className=\"chat-list\">\n                    <div className={\"header-chat-list\"}>\n                        <div className={'header-login'}>\n                            <UserIcon />\n                            <Auth />\n                        </div>\n                        <SearchBar searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\n                        {token ? <UniversalButton onClick={() => handlers.openCreateChatModal(setFirstName, setLastName, setIsEditing, setShowModal)} label=\"Create Chat\" /> : null}\n                        {token ? (\n                            <button onClick={handleToggleSendingMessages} className=\"send-random-button\">\n                                {isSendingMessages ? \"Stop Sending\" : \"Start Sending\"}\n                            </button>\n                        ) : null}\n                    </div>\n                    <ChatList\n                        chats={chats.filter(chat =>\n                            `${chat.first_name} ${chat.last_name}`.toLowerCase().includes(searchTerm.toLowerCase())\n                        )}\n                        selectedChat={selectedChat}\n                        onSelectChat={(chatId) => handlers.handleChatSelect(chatId, token, setSelectedChat, setMessages, setChatUName)}\n                        onEditChat={(chat) => handlers.handleEditChat(chat, setFirstName, setLastName, setSelectedChat, setShowModal, setIsEditing, setInitialFirstName, setInitialLastName)}\n                        onDeleteChat={(chatId) => handlers.handleDeleteChat(chatId, token, setChats, setSelectedChat, setMessages)}\n                    />\n                </div>\n                <div className=\"message-area\">\n                    <ChatDetails\n                        selectedChat={selectedChat}\n                        chatName={ChatUName}\n                    />\n                    <div className=\"message-list\">\n                        <MessageList messages={messages} userId={handlers.getUserIdFromToken(token)} />\n                    </div>\n                    <div className=\"message-input\">\n                        <input\n                            className={'message-focus'}\n                            type=\"text\"\n                            value={messageToSend}\n                            onChange={(e) => setMessageToSend(e.target.value)}\n                            placeholder=\"Type your message...\"\n                        />\n                        <button onClick={() => handlers.handleSendMessage(socket, selectedChat, messageToSend, setMessageToSend)} className=\"send-button\">\n                            <FontAwesomeIcon style={{ opacity: 0.5 }} icon={faPaperPlane} />\n                        </button>\n                    </div>\n                </div>\n                {showModal && (\n                    <UniversalChatModal\n                        isEditing={isEditing}\n                        initialFirstName={initialFirstName}\n                        initialLastName={initialLastName}\n                        firstName={firstName}\n                        lastName={lastName}\n                        setFirstName={setFirstName}\n                        setLastName={setLastName}\n                        handleSubmit={handleSubmit}\n                        closeModal={() => setShowModal(false)}\n                    />\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
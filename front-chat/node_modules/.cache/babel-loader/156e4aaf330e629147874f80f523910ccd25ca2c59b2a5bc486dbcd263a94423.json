{"ast":null,"code":"var _jsxFileName = \"G:\\\\webProj\\\\front-chat\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport { jwtDecode } from 'jwt-decode';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Auth from './components/Auth';\nimport ChatList from './components/ChatList';\nimport MessageList from './components/MessageList';\nimport './App.css';\nimport InputField from \"./components/InputField\";\nimport UniversalChatModal from \"./components/UniversalChatModal\"; // Імпорт стилів\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [token, setToken] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const selectedChatRef = useRef(null);\n  const [messageToSend, setMessageToSend] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [initialFirstName, setInitialFirstName] = useState('');\n  const [initialLastName, setInitialLastName] = useState('');\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    selectedChatRef.current = selectedChat;\n  }, [selectedChat]);\n  const handleEditChat = async chat => {\n    setInitialFirstName(chat.first_name);\n    setInitialLastName(chat.last_name);\n    setIsEditing(true);\n    setFirstName(chat.first_name);\n    setLastName(chat.last_name);\n    setSelectedChat(chat.chat_name);\n    setShowModal(true);\n  };\n  const handleDeleteChat = async chatId => {\n    try {\n      await axios.delete(`http://localhost:3000/chat/delete-chat/${chatId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setChats(prevChats => prevChats.filter(chat => chat.chat_name !== chatId));\n      if (selectedChat === chatId) {\n        setSelectedChat(null);\n        setMessages([]);\n      }\n    } catch (error) {\n      console.error('Error deleting chat:', error);\n    }\n  };\n\n  // Декодування токена для отримання userId\n  const getUserIdFromToken = token => {\n    try {\n      const decodedToken = jwtDecode(token);\n      return decodedToken.userId; // Або інший ключ, де зберігається ID користувача\n    } catch (error) {\n      console.error('Error decoding token:', error);\n      return null;\n    }\n  };\n  const userId = token ? getUserIdFromToken(token) : null;\n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const tokenFromUrl = queryParams.get('token');\n    if (tokenFromUrl) {\n      localStorage.setItem('token', tokenFromUrl);\n      setToken(tokenFromUrl);\n      window.history.replaceState({}, document.title, \"/\");\n    } else {\n      const savedToken = localStorage.getItem('token');\n      setToken(savedToken);\n    }\n    if (token) {\n      const socketIo = io('http://localhost:3000', {\n        query: {\n          token\n        }\n      });\n      setSocket(socketIo);\n      socketIo.on('connect', () => {\n        console.log(\"Socket connected\");\n        fetchChats(socketIo);\n      });\n\n      // socketIo.on('message', (message) => {\n      //   console.log('New message received:', message);\n      //   console.log(selectedChatRef.current === message.room)\n      //   console.log(\"room\" +  message.room)\n      //   console.log( selectedChatRef.current)\n      //   console.log(\"MessUserId\"+message.user);\n      //   console.log(userId);\n      //\n      //   if (selectedChatRef.current === message.room) {\n      //     setMessages((prevMessages) => [...prevMessages, message]);\n      //   }\n      //\n      //   if (message.user !== userId) {\n      //     toast.info(`New message from ${message.chatName}`);\n      //   }\n      // });\n\n      return () => {\n        socketIo.disconnect();\n      };\n    }\n  }, [token]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    // Прокручування до останнього повідомлення\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const handleUpdateChat = async () => {\n    if (!firstName || !lastName) {\n      alert('Both fields are required');\n      return;\n    }\n    try {\n      await axios.put(`http://localhost:3000/chat/update-chat/${selectedChat}`, {\n        first_name: firstName,\n        last_name: lastName\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setChats(prevChats => prevChats.map(chat => chat.chat_name === selectedChat ? {\n        ...chat,\n        first_name: firstName,\n        last_name: lastName\n      } : chat));\n      setSelectedChat(selectedChat);\n      setShowModal(false);\n    } catch (error) {\n      console.error('Error updating chat:', error);\n    }\n  };\n  const fetchChats = async socketIo => {\n    try {\n      const response = await axios.get('http://localhost:3000/chat/all-user-chats', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setChats(response.data);\n      console.log(response.data);\n      response.data.forEach(chat => {\n        socketIo.emit('joinRoom', chat.chat_name);\n      });\n    } catch (error) {\n      console.error('Error fetching chats:', error);\n    }\n  };\n  const handleSendMessage = () => {\n    if (socket && selectedChat && messageToSend) {\n      socket.emit('sendMessage', {\n        room: selectedChat,\n        message: messageToSend\n      });\n      setMessageToSend('');\n    }\n  };\n  const handleChatSelect = async chatId => {\n    setSelectedChat(chatId);\n    selectedChatRef.current = chatId; // Переконайтесь, що ви оновлюєте реф також\n    setMessages([]); // Очищення повідомлень при виборі нового чату\n\n    try {\n      const response = await axios.get(`http://localhost:3000/chat/get-chat/${chatId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setMessages(response.data.messages);\n    } catch (error) {\n      console.error('Error fetching chat messages:', error);\n    }\n  };\n  const filteredChats = chats.filter(chat => `${chat.first_name} ${chat.last_name}`.toLowerCase().includes(searchTerm.toLowerCase()));\n  const handleCreateChat = async () => {\n    if (!firstName || !lastName) {\n      alert('Both fields are required');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:3000/chat/create-chat', {\n        firstName,\n        lastName\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const newChatName = response.data;\n      setChats(prevChats => [...prevChats, newChatName]);\n      socket.emit('joinRoom', newChatName);\n      setSelectedChat(newChatName); // Додайте це для вибору нової кімнати\n      setShowModal(false);\n    } catch (error) {\n      console.error('Error creating chat:', error);\n    }\n  };\n  const openCreateChatModal = () => {\n    setFirstName('');\n    setLastName('');\n    setIsEditing(false);\n    setShowModal(true);\n  };\n  const openEditChatModal = chat => {\n    setInitialFirstName(chat.first_name);\n    setInitialLastName(chat.last_name);\n    setIsEditing(true);\n    setShowModal(true);\n  };\n  const handleSubmit = isEditing ? handleUpdateChat : handleCreateChat;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this), !token ? /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Chats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search chats...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ChatList, {\n          chats: filteredChats,\n          selectedChat: selectedChat,\n          onSelectChat: handleChatSelect,\n          onEditChat: handleEditChat,\n          onDeleteChat: handleDeleteChat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openCreateChatModal,\n          children: \"Create Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-info\",\n          children: selectedChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Chat Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `First Name: ${selectedChat.first_name}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `Last Name: ${selectedChat.last_name}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => openEditChatModal(selectedChat),\n              children: \"Edit Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 23\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select a chat to see info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-list\",\n          children: /*#__PURE__*/_jsxDEV(MessageList, {\n            messages: messages,\n            userId: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: messageToSend,\n            onChange: e => setMessageToSend(e.target.value),\n            placeholder: \"Type your message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 15\n      }, this), showModal && /*#__PURE__*/_jsxDEV(UniversalChatModal, {\n        isEditing: isEditing,\n        initialFirstName: initialFirstName,\n        initialLastName: initialLastName,\n        firstName: firstName,\n        lastName: lastName,\n        setFirstName: setFirstName,\n        setLastName: setLastName,\n        handleSubmit: handleSubmit,\n        closeModal: () => setShowModal(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"rrFy1U1fq7v/ZLiobqeoX4VJQos=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","io","jwtDecode","ToastContainer","toast","Auth","ChatList","MessageList","InputField","UniversalChatModal","jsxDEV","_jsxDEV","App","_s","token","setToken","socket","setSocket","messages","setMessages","chats","setChats","selectedChat","setSelectedChat","selectedChatRef","messageToSend","setMessageToSend","showModal","setShowModal","firstName","setFirstName","lastName","setLastName","searchTerm","setSearchTerm","isEditing","setIsEditing","initialFirstName","setInitialFirstName","initialLastName","setInitialLastName","messagesEndRef","current","handleEditChat","chat","first_name","last_name","chat_name","handleDeleteChat","chatId","delete","headers","prevChats","filter","error","console","getUserIdFromToken","decodedToken","userId","queryParams","URLSearchParams","window","location","search","tokenFromUrl","get","localStorage","setItem","history","replaceState","document","title","savedToken","getItem","socketIo","query","on","log","fetchChats","disconnect","_messagesEndRef$curre","scrollIntoView","behavior","handleUpdateChat","alert","put","map","response","data","forEach","emit","handleSendMessage","room","message","handleChatSelect","filteredChats","toLowerCase","includes","handleCreateChat","post","newChatName","openCreateChatModal","openEditChatModal","handleSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onSelectChat","onEditChat","onDeleteChat","onClick","ref","closeModal","_c","$RefreshReg$"],"sources":["G:/webProj/front-chat/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport { jwtDecode } from 'jwt-decode';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Auth from './components/Auth';\nimport ChatList from './components/ChatList';\nimport MessageList from './components/MessageList';\nimport './App.css';\nimport InputField from \"./components/InputField\";\nimport UniversalChatModal from \"./components/UniversalChatModal\"; // Імпорт стилів\n\nfunction App() {\n  const [token, setToken] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const selectedChatRef = useRef(null);\n  const [messageToSend, setMessageToSend] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [initialFirstName, setInitialFirstName] = useState('');\n  const [initialLastName, setInitialLastName] = useState('');\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    selectedChatRef.current = selectedChat;\n  }, [selectedChat]);\n\n  const handleEditChat = async (chat) => {\n    setInitialFirstName(chat.first_name);\n    setInitialLastName(chat.last_name);\n    setIsEditing(true);\n    setFirstName(chat.first_name);\n    setLastName(chat.last_name);\n    setSelectedChat(chat.chat_name);\n    setShowModal(true);\n  };\n  const handleDeleteChat = async (chatId) => {\n    try {\n      await axios.delete(`http://localhost:3000/chat/delete-chat/${chatId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setChats((prevChats) => prevChats.filter(chat => chat.chat_name !== chatId));\n      if (selectedChat === chatId) {\n        setSelectedChat(null);\n        setMessages([]);\n      }\n    } catch (error) {\n      console.error('Error deleting chat:', error);\n    }\n  };\n\n  // Декодування токена для отримання userId\n  const getUserIdFromToken = (token) => {\n    try {\n      const decodedToken = jwtDecode(token);\n      return decodedToken.userId; // Або інший ключ, де зберігається ID користувача\n    } catch (error) {\n      console.error('Error decoding token:', error);\n      return null;\n    }\n  };\n\n  const userId = token ? getUserIdFromToken(token) : null;\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const tokenFromUrl = queryParams.get('token');\n\n    if (tokenFromUrl) {\n      localStorage.setItem('token', tokenFromUrl);\n      setToken(tokenFromUrl);\n      window.history.replaceState({}, document.title, \"/\");\n    } else {\n      const savedToken = localStorage.getItem('token');\n      setToken(savedToken);\n    }\n\n    if (token) {\n      const socketIo = io('http://localhost:3000', {\n        query: { token }\n      });\n      setSocket(socketIo);\n\n      socketIo.on('connect', () => {\n        console.log(\"Socket connected\");\n        fetchChats(socketIo);\n      });\n\n      // socketIo.on('message', (message) => {\n      //   console.log('New message received:', message);\n      //   console.log(selectedChatRef.current === message.room)\n      //   console.log(\"room\" +  message.room)\n      //   console.log( selectedChatRef.current)\n      //   console.log(\"MessUserId\"+message.user);\n      //   console.log(userId);\n      //\n      //   if (selectedChatRef.current === message.room) {\n      //     setMessages((prevMessages) => [...prevMessages, message]);\n      //   }\n      //\n      //   if (message.user !== userId) {\n      //     toast.info(`New message from ${message.chatName}`);\n      //   }\n      // });\n\n      return () => {\n        socketIo.disconnect();\n      };\n    }\n  }, [token]);\n\n  useEffect(() => {\n    // Прокручування до останнього повідомлення\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  const handleUpdateChat = async () => {\n    if (!firstName || !lastName) {\n      alert('Both fields are required');\n      return;\n    }\n\n    try {\n      await axios.put(`http://localhost:3000/chat/update-chat/${selectedChat}`, {\n        first_name: firstName,\n        last_name: lastName\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      setChats((prevChats) => prevChats.map(chat =>\n          chat.chat_name === selectedChat\n              ? { ...chat, first_name: firstName, last_name: lastName }\n              : chat\n      ));\n\n      setSelectedChat(selectedChat);\n      setShowModal(false);\n    } catch (error) {\n      console.error('Error updating chat:', error);\n    }\n  };\n\n  const fetchChats = async (socketIo) => {\n    try {\n      const response = await axios.get('http://localhost:3000/chat/all-user-chats', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setChats(response.data);\n      console.log(response.data);\n\n      response.data.forEach(chat => {\n        socketIo.emit('joinRoom', chat.chat_name);\n      });\n    } catch (error) {\n      console.error('Error fetching chats:', error);\n    }\n  };\n\n  const handleSendMessage = () => {\n    if (socket && selectedChat && messageToSend) {\n      socket.emit('sendMessage', { room: selectedChat, message: messageToSend });\n      setMessageToSend('');\n    }\n  };\n\n  const handleChatSelect = async (chatId) => {\n    setSelectedChat(chatId);\n    selectedChatRef.current = chatId; // Переконайтесь, що ви оновлюєте реф також\n    setMessages([]); // Очищення повідомлень при виборі нового чату\n\n    try {\n      const response = await axios.get(`http://localhost:3000/chat/get-chat/${chatId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setMessages(response.data.messages);\n    } catch (error) {\n      console.error('Error fetching chat messages:', error);\n    }\n  };\n\n\n\n  const filteredChats = chats.filter(chat =>\n      `${chat.first_name} ${chat.last_name}`.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n  const handleCreateChat = async () => {\n    if (!firstName || !lastName) {\n      alert('Both fields are required');\n      return;\n    }\n\n    try {\n      const response = await axios.post('http://localhost:3000/chat/create-chat', {\n        firstName,\n        lastName\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      const newChatName = response.data;\n      setChats((prevChats) => [...prevChats, newChatName]);\n      socket.emit('joinRoom', newChatName);\n      setSelectedChat(newChatName); // Додайте це для вибору нової кімнати\n      setShowModal(false);\n    } catch (error) {\n      console.error('Error creating chat:', error);\n    }\n  };\n\n\n  const openCreateChatModal = () => {\n    setFirstName('');\n    setLastName('');\n    setIsEditing(false);\n    setShowModal(true);\n  };\n\n  const openEditChatModal = (chat) => {\n    setInitialFirstName(chat.first_name);\n    setInitialLastName(chat.last_name);\n    setIsEditing(true);\n    setShowModal(true);\n  };\n\n  const handleSubmit = isEditing ? handleUpdateChat : handleCreateChat;\n\n\n\n  return (\n      <div className=\"app-container\">\n        <ToastContainer />\n        {!token ? (\n            <Auth />\n        ) : (\n            <div className=\"chat-app\">\n              <div className=\"chat-list\">\n                <h1>Chats</h1>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search chats...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                />\n                <ChatList\n                    chats={filteredChats}\n                    selectedChat={selectedChat}\n                    onSelectChat={handleChatSelect}\n                    onEditChat={handleEditChat}\n                    onDeleteChat={handleDeleteChat}\n                />\n\n                <button onClick={openCreateChatModal}>Create Chat</button>\n              </div>\n              <div className=\"message-area\">\n                <div className=\"message-info\">\n                  {selectedChat ? (\n                      <div>\n                        <h3>Chat Info</h3>\n                        <p>{`First Name: ${selectedChat.first_name}`}</p>\n                        <p>{`Last Name: ${selectedChat.last_name}`}</p>\n                        <button onClick={() => openEditChatModal(selectedChat)}>Edit Chat</button>\n                      </div>\n                  ) : (\n                      <p>Select a chat to see info</p>\n                  )}\n                </div>\n                <div className=\"message-list\">\n                  <MessageList messages={messages} userId={userId} />\n                </div>\n                <div className=\"message-input\">\n                  <input\n                      type=\"text\"\n                      value={messageToSend}\n                      onChange={(e) => setMessageToSend(e.target.value)}\n                      placeholder=\"Type your message...\"\n                  />\n                  <button onClick={handleSendMessage}>Send</button>\n                </div>\n                <div ref={messagesEndRef} />\n              </div>\n              {showModal && (\n                  <UniversalChatModal\n                      isEditing={isEditing}\n                      initialFirstName={initialFirstName}\n                      initialLastName={initialLastName}\n                      firstName={firstName}\n                      lastName={lastName}\n                      setFirstName={setFirstName}\n                      setLastName={setLastName}\n                      handleSubmit={handleSubmit}\n                      closeModal={() => setShowModal(false)}\n                  />\n              )}\n            </div>\n        )}\n      </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
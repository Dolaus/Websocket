{"ast":null,"code":"import axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nexport const getUserIdFromToken = token => {\n  try {\n    const decodedToken = jwtDecode(token);\n    return decodedToken.userId;\n  } catch (error) {\n    console.error('Error decoding token:', error);\n    return null;\n  }\n};\nexport const updateLastMessage = (message, setChats) => {\n  setChats(prevChats => prevChats.map(chat => {\n    if (chat.chat_name === message.room) {\n      return {\n        ...chat,\n        lastMessage: message\n      };\n    }\n    return chat;\n  }));\n};\nexport const handleEditChat = async (chat, setFirstName, setLastName, setSelectedChat, setShowModal, setIsEditing, setInitialFirstName, setInitialLastName) => {\n  setInitialFirstName(chat.first_name);\n  setInitialLastName(chat.last_name);\n  setIsEditing(true);\n  setFirstName(chat.first_name);\n  setLastName(chat.last_name);\n  setSelectedChat(chat.chat_name);\n  setShowModal(true);\n};\nexport const handleDeleteChat = async (chatId, token, setChats, setSelectedChat, setMessages) => {\n  try {\n    await axios.delete(`http://localhost:3000/chat/delete-chat/${chatId}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    setChats(prevChats => prevChats.filter(chat => chat.chat_name !== chatId));\n    if (setSelectedChat === chatId) {\n      setSelectedChat(null);\n      setMessages([]);\n    }\n  } catch (error) {\n    console.error('Error deleting chat:', error);\n  }\n};\nexport const handleUpdateChat = async (firstName, lastName, selectedChat, token, setChats, setSelectedChat, setShowModal) => {\n  if (!firstName || !lastName) {\n    alert('Both fields are required');\n    return;\n  }\n  try {\n    await axios.put(`http://localhost:3000/chat/update-chat/${selectedChat}`, {\n      first_name: firstName,\n      last_name: lastName\n    }, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    setChats(prevChats => prevChats.map(chat => chat.chat_name === selectedChat ? {\n      ...chat,\n      first_name: firstName,\n      last_name: lastName\n    } : chat));\n    setSelectedChat(selectedChat);\n    setShowModal(false);\n  } catch (error) {\n    console.error('Error updating chat:', error);\n  }\n};\nexport const fetchChats = async (socketIo, token, setChats, setChatUName, setMessages) => {\n  try {\n    const response = await axios.get('http://localhost:3000/chat/all-user-chats', {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    setChats(response.data);\n    response.data.forEach(chat => {\n      socketIo.emit('joinRoom', chat.chat_name);\n    });\n  } catch (error) {\n    console.error('Error fetching chats:', error);\n  }\n};\nexport const handleSendMessage = (socket, selectedChat, messageToSend, setMessageToSend) => {\n  if (socket && selectedChat && messageToSend) {\n    socket.emit('sendMessage', {\n      room: selectedChat,\n      message: messageToSend\n    });\n    setMessageToSend('');\n  }\n};\nexport const handleChatSelect = async (chatId, token, setSelectedChat, setMessages, setChatUName) => {\n  setSelectedChat(chatId);\n  setMessages([]);\n  try {\n    const response = await axios.get(`http://localhost:3000/chat/get-chat/${chatId}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    setChatUName(response.data.first_name + \" \" + response.data.last_name);\n    setMessages(response.data.messages);\n  } catch (error) {\n    console.error('Error fetching chat messages:', error);\n  }\n};\nexport const handleCreateChat = async (firstName, lastName, token, setChats, setSelectedChat, socket, setShowModal) => {\n  if (!firstName || !lastName) {\n    alert('Both fields are required');\n    return;\n  }\n  try {\n    const response = await axios.post('http://localhost:3000/chat/create-chat', {\n      firstName,\n      lastName\n    }, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const newChatName = response.data;\n    setChats(prevChats => [...prevChats, newChatName]);\n    socket.emit('joinRoom', newChatName.chat_name);\n    setSelectedChat(newChatName.chat_name);\n    setShowModal(false);\n  } catch (error) {\n    console.error('Error creating chat:', error);\n  }\n};\nexport const openCreateChatModal = (setFirstName, setLastName, setIsEditing, setShowModal) => {\n  setFirstName('');\n  setLastName('');\n  setIsEditing(false);\n  setShowModal(true);\n};\nexport const openEditChatModal = (chat, setFirstName, setLastName, setIsEditing, setShowModal, setInitialFirstName, setInitialLastName) => {\n  setInitialFirstName(chat.first_name);\n  setInitialLastName(chat.last_name);\n  setIsEditing(true);\n  setFirstName(chat.first_name);\n  setLastName(chat.last_name);\n  setShowModal(true);\n};","map":{"version":3,"names":["axios","jwtDecode","getUserIdFromToken","token","decodedToken","userId","error","console","updateLastMessage","message","setChats","prevChats","map","chat","chat_name","room","lastMessage","handleEditChat","setFirstName","setLastName","setSelectedChat","setShowModal","setIsEditing","setInitialFirstName","setInitialLastName","first_name","last_name","handleDeleteChat","chatId","setMessages","delete","headers","filter","handleUpdateChat","firstName","lastName","selectedChat","alert","put","fetchChats","socketIo","setChatUName","response","get","data","forEach","emit","handleSendMessage","socket","messageToSend","setMessageToSend","handleChatSelect","messages","handleCreateChat","post","newChatName","openCreateChatModal","openEditChatModal"],"sources":["G:/webProj/front-chat/src/handlers/handlers.js"],"sourcesContent":["import axios from 'axios';\r\nimport {jwtDecode} from 'jwt-decode';\r\n\r\nexport const getUserIdFromToken = (token) => {\r\n    try {\r\n        const decodedToken = jwtDecode(token);\r\n        return decodedToken.userId;\r\n    } catch (error) {\r\n        console.error('Error decoding token:', error);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const updateLastMessage = (message, setChats) => {\r\n    setChats(prevChats => prevChats.map(chat => {\r\n        if (chat.chat_name === message.room) {\r\n            return {\r\n                ...chat,\r\n                lastMessage: message\r\n            };\r\n        }\r\n        return chat;\r\n    }));\r\n};\r\n\r\nexport const handleEditChat = async (chat, setFirstName, setLastName, setSelectedChat, setShowModal, setIsEditing, setInitialFirstName, setInitialLastName) => {\r\n    setInitialFirstName(chat.first_name);\r\n    setInitialLastName(chat.last_name);\r\n    setIsEditing(true);\r\n    setFirstName(chat.first_name);\r\n    setLastName(chat.last_name);\r\n    setSelectedChat(chat.chat_name);\r\n    setShowModal(true);\r\n};\r\n\r\nexport const handleDeleteChat = async (chatId, token, setChats, setSelectedChat, setMessages) => {\r\n    try {\r\n        await axios.delete(`http://localhost:3000/chat/delete-chat/${chatId}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        });\r\n        setChats((prevChats) => prevChats.filter(chat => chat.chat_name !== chatId));\r\n        if (setSelectedChat === chatId) {\r\n            setSelectedChat(null);\r\n            setMessages([]);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error deleting chat:', error);\r\n    }\r\n};\r\n\r\nexport const handleUpdateChat = async (firstName, lastName, selectedChat, token, setChats, setSelectedChat, setShowModal) => {\r\n    if (!firstName || !lastName) {\r\n        alert('Both fields are required');\r\n        return;\r\n    }\r\n\r\n    try {\r\n        await axios.put(`http://localhost:3000/chat/update-chat/${selectedChat}`, {\r\n            first_name: firstName,\r\n            last_name: lastName\r\n        }, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        });\r\n\r\n        setChats((prevChats) => prevChats.map(chat =>\r\n            chat.chat_name === selectedChat\r\n                ? {...chat, first_name: firstName, last_name: lastName}\r\n                : chat\r\n        ));\r\n\r\n        setSelectedChat(selectedChat);\r\n        setShowModal(false);\r\n    } catch (error) {\r\n        console.error('Error updating chat:', error);\r\n    }\r\n};\r\n\r\nexport const fetchChats = async (socketIo, token, setChats, setChatUName, setMessages) => {\r\n    try {\r\n        const response = await axios.get('http://localhost:3000/chat/all-user-chats', {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        });\r\n        setChats(response.data);\r\n\r\n        response.data.forEach(chat => {\r\n            socketIo.emit('joinRoom', chat.chat_name);\r\n        });\r\n    } catch (error) {\r\n        console.error('Error fetching chats:', error);\r\n    }\r\n};\r\n\r\nexport const handleSendMessage = (socket, selectedChat, messageToSend, setMessageToSend) => {\r\n    if (socket && selectedChat && messageToSend) {\r\n        socket.emit('sendMessage', { room: selectedChat, message: messageToSend });\r\n        setMessageToSend('');\r\n    }\r\n};\r\n\r\nexport const handleChatSelect = async (chatId, token, setSelectedChat, setMessages, setChatUName) => {\r\n    setSelectedChat(chatId);\r\n    setMessages([]);\r\n\r\n    try {\r\n        const response = await axios.get(`http://localhost:3000/chat/get-chat/${chatId}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        });\r\n        setChatUName(response.data.first_name + \" \" + response.data.last_name);\r\n        setMessages(response.data.messages);\r\n    } catch (error) {\r\n        console.error('Error fetching chat messages:', error);\r\n    }\r\n};\r\n\r\nexport const handleCreateChat = async (firstName, lastName, token, setChats, setSelectedChat, socket, setShowModal) => {\r\n    if (!firstName || !lastName) {\r\n        alert('Both fields are required');\r\n        return;\r\n    }\r\n\r\n    try {\r\n        const response = await axios.post('http://localhost:3000/chat/create-chat', {\r\n            firstName,\r\n            lastName\r\n        }, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        });\r\n\r\n        const newChatName = response.data;\r\n        setChats((prevChats) => [...prevChats, newChatName]);\r\n        socket.emit('joinRoom', newChatName.chat_name);\r\n        setSelectedChat(newChatName.chat_name);\r\n        setShowModal(false);\r\n    } catch (error) {\r\n        console.error('Error creating chat:', error);\r\n    }\r\n};\r\n\r\nexport const openCreateChatModal = (setFirstName, setLastName, setIsEditing, setShowModal) => {\r\n    setFirstName('');\r\n    setLastName('');\r\n    setIsEditing(false);\r\n    setShowModal(true);\r\n};\r\n\r\nexport const openEditChatModal = (chat, setFirstName, setLastName, setIsEditing, setShowModal, setInitialFirstName, setInitialLastName) => {\r\n    setInitialFirstName(chat.first_name);\r\n    setInitialLastName(chat.last_name);\r\n    setIsEditing(true);\r\n    setFirstName(chat.first_name);\r\n    setLastName(chat.last_name);\r\n    setShowModal(true);\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}